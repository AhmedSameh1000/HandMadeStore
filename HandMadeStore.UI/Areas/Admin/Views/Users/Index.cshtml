@using Identity.Models.DTOs;
@using Microsoft.AspNetCore.Localization;
@model List<UserViewModel>
@{
    ViewData["Title"] = "All Users";
}

@inject IViewLocalizer Localizer
@{
    var reqCulture = Context.Features.Get<IRequestCultureFeature>();
    var Culture = reqCulture.RequestCulture.Culture.Name;
    var isArabic = Culture == "ar-EG";
}
<div class="row justify-content-between">
    <h1 class="col">@Localizer["Users"]</h1>

    <a class="btn btn-outline-primary mb-3 col" asp-action="Add">@Localizer["Create"]</a>

</div>
@if(Model.Count==0){
    <h3>@Localizer["NoRoles"]</h3>
}
else
{
      <table class="table table-dark table-striped">
            <thead>
                <tr>
                <th scope="col">@Localizer["Name"]</th>

                <th scope="col">@Localizer["Email"]</th>
                <th scope="col">@Localizer["Roles"]</th>
                <th scope="col" class="text-center">@Localizer["Actions"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var User in Model)
                {
                    <tr>
                        
                        <td>@User.Name</td>
                        <td>@User.Email</td>
                    @if (User.Roles.Count() == 0)
                    {
                        <td>No Roles found</td>

                    }
                    else
                    {
                    <td>@string.Join(",",User.Roles)</td>
                        
                    }

                        <td style="display:flex;justify-content:center;gap:10px">
                        <a asp-action="Mange" asp-route-id="@User.Id" class="  btn btn-primary">@Localizer["UpdateRoles"]</a>
                        <a asp-action="Edit" asp-route-id="@User.Id" class=" btn btn-primary">@Localizer["UpdateData"] </a>
                        <a id="del" onclick="Delete(event)" class=" btn btn-danger Js-Deleted" data-id="@User.Id">@Localizer["Delete"] </a>
                        </td>
                 
                    </tr>
                }
            </tbody>
        </table>
        
    
}
@*@section Scripts{
    <script>
        const Delete=(e)=>{
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/Admin/Users/Delete?id=${e.srcElement.attributes[3].value}`,
                        type: 'DELETE',
                        success: function (data) {
                            e.srcElement.parentNode.parentNode.remove();
                            Swal.fire({
                                    position: 'top-end',
                                    icon: 'success',
                                    title: 'User Deleted Successfuly',
                                    showConfirmButton: false,
                                    timer: 1500
                            })
                            
                        }
                    })
                }
            })
        }
    </script>
}*@


@section Scripts{
    <script>
        function Run() {
            var btnToDelete = document.getElementsByClassName("Js-Deleted");
            for (let i = 0; i < btnToDelete.length; i++) {
                btnToDelete[i].onclick = function () {
                    var btn = btnToDelete[i];
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "That You delete This User!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#df4759',
                        cancelButtonColor: '#42ba96',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            console.log("try");
                            fetch(`/Admin/Users/Delete?id=${btn.getAttribute("data-id")}`, {
                                method: 'DELETE',

                            })
                                .then(response => {
                                    if (response.ok) {
                                        console.log("also try");

                                        Swal.fire({
                                            position: 'top-end',
                                            icon: 'success',
                                            title: 'User Deleted Successfuly',
                                            showConfirmButton: false,
                                            timer: 1500
                                        })
                                        console.log('DELETE request successful');
                                        btn.parentElement.parentElement.remove();
                                    } else {
                                        console.log("bad try");

                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: 'Something went wrong while Deleting this User!',
                                        })
                                    }

                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    console.log("error happend")
                                });
                        }
                    })

                }
            }
        }
        Run();
    </script>
}